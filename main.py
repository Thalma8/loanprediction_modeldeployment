# -*- coding: utf-8 -*-
"""loanprediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bZPo2HhpOZSq3_YPPi60W29gBzQB2aiz
"""

import pandas as pd
 
train = pd.read_csv('train_ctrUa4K.csv') 

train.head()

"""We know that machine learning models take only numbers as inputs and can not process strings. So, we have to deal with the categories present in the dataset and convert them into numbers. using the python map function"""

train['Gender']= train['Gender'].map({'Male':0, 'Female':1})
train['Married']= train['Married'].map({'No':0, 'Yes':1})
train['Loan_Status']= train['Loan_Status'].map({'N':0, 'Y':1})
train.head()

"""letâ€™s check if there are any missing values in the dataset:"""

train.isnull().sum()

"""Next, we will remove all the rows which contain any missing values in them:"""

train = train.dropna()
train.isnull().sum()

"""now we separate the dependent and the independent variables. for this project we have selected 'Gender','Married','ApplicantIncome','LoanAmount','Credit_History' as our most relevant data for the project."""

X=train[['Gender','Married','ApplicantIncome','LoanAmount','Credit_History']]

y=train.Loan_Status

X.shape

y.shape

"""now we move to the model deployment stage"""

from sklearn.model_selection import train_test_split

x_train, x_cv, y_train, y_cv = train_test_split(X,y, test_size = 0.2, random_state = 10)

from sklearn.ensemble import RandomForestClassifier 
model = RandomForestClassifier(max_depth=4, random_state = 10) 
model.fit(x_train, y_train)

from sklearn.metrics import accuracy_score
pred_cv = model.predict(x_cv)
accuracy_score(y_cv,pred_cv)

"""We are saving the model in pickle format and storing it as classifier.pkl. This will store the trained model and we will use this while deploying the model."""

# saving the model 
import pickle 
pickle_out = open("classifier.pkl", mode = "wb") 
pickle.dump(model, pickle_out) 
pickle_out.close()

print('model trained, created and saved successfully')



